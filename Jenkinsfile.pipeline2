pipeline {
    agent any

    parameters {
        choice(name: 'RELEASE_VERSION', choices: ['25.2.0'], description: 'Select Release Version')
        booleanParam(name: 'BUILD_SERVICES', defaultValue: true, description: 'Build Backend-WebAPI Docker Image')
        booleanParam(name: 'BUILD_SQL', defaultValue: true, description: 'Build SQL-Service Docker Image')
        booleanParam(name: 'BUILD_METADATA', defaultValue: true, description: 'Build Metadata-Service Docker Image')
        booleanParam(name: 'PUSH_TO_ECR', defaultValue: true, description: 'Push Docker Images to ECR')
    }

    environment {
        AWS_ACCOUNT_ID = '969258966375'
        REGION = 'eu-north-1'
        BUILD_DIR = "D:\\MarketMapBuilds\\${params.RELEASE_VERSION}\\CombinedBuild"
        WORKSPACE_DIR = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\MarketMap-Docker-Packaging\\docker"
    }

    stages {
        stage('Show Selections') {
            steps {
                script {
                    echo "========= Pipeline Configuration ========="
                    echo "Build Backend-WebAPI : ${params.BUILD_SERVICES}"
                    echo "Build SQL-Service     : ${params.BUILD_SQL}"
                    echo "Build Metadata        : ${params.BUILD_METADATA}"
                    echo "Release Version       : ${params.RELEASE_VERSION}"
                    echo "Push to ECR           : ${params.PUSH_TO_ECR}"
                    echo "=========================================="
                }
            }
        }

        stage('Prepare Workspace') {
            steps {
                bat """
                    echo # Docker Build Manifest for RELEASE ${params.RELEASE_VERSION} > D:\\MarketMapBuilds\\${params.RELEASE_VERSION}\\DockerBuildInfo.txt
                    echo # Last Updated: %date% %time% >> D:\\MarketMapBuilds\\${params.RELEASE_VERSION}\\DockerBuildInfo.txt
                """
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    if (params.BUILD_SERVICES) {
                        echo "Building backend-webapi Docker image..."
                        bat """python build_push_backend.py backend-webapi ${params.RELEASE_VERSION} ${params.PUSH_TO_ECR}"""
                    }

                    if (params.BUILD_SQL) {
                        echo "Building sql-service Docker image..."
                        bat """python build_push_backend.py sql-service ${params.RELEASE_VERSION} ${params.PUSH_TO_ECR}"""
                    }

                    if (params.BUILD_METADATA) {
                        echo "Building metadata-service Docker image..."
                        bat """python build_push_backend.py metadata-service ${params.RELEASE_VERSION} ${params.PUSH_TO_ECR}"""
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✔ Pipeline completed successfully."
        }
        failure {
            echo "✖ Pipeline failed."
        }
    }
}
